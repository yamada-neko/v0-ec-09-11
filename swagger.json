{
  "openapi": "3.0.3",
  "info": {
    "title": "EC Backend API",
    "version": "1.0.0",
    "description": "Simple EC-style backend (register, login, products, purchase)."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "local dev"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterDTO": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string", "example": "Taro Yamada" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "taro@example.com"
          },
          "password": { "type": "string", "example": "secret123" }
        }
      },
      "LoginDTO": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "taro@example.com"
          },
          "password": { "type": "string", "example": "secret123" }
        }
      },
      "ProductDTO": {
        "type": "object",
        "required": ["name", "price", "stock"],
        "properties": {
          "name": { "type": "string", "example": "T-shirt" },
          "description": { "type": "string", "example": "100% cotton" },
          "price": {
            "type": "integer",
            "description": "price in cents",
            "example": 2500
          },
          "stock": { "type": "integer", "example": 10 }
        }
      },
      "UpdateProductDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "T-shirt" },
          "description": { "type": "string", "example": "100% cotton" },
          "price": {
            "type": "integer",
            "description": "price in cents",
            "example": 2500
          },
          "stock": { "type": "integer", "example": 10 }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "T-shirt" },
          "description": { "type": "string", "example": "100% cotton" },
          "price": { "type": "integer", "example": 2500 },
          "stock": { "type": "integer", "example": 10 },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "PurchaseItemDTO": {
        "type": "object",
        "required": ["product_id", "quantity"],
        "properties": {
          "product_id": { "type": "integer", "example": 1 },
          "quantity": { "type": "integer", "example": 2 }
        }
      },
      "PurchaseDTO": {
        "type": "object",
        "required": ["items", "address"],
        "properties": {
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PurchaseItemDTO" }
          },
          "address": { "type": "string", "example": "Tokyo, Japan" }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "order_id": { "type": "integer" },
          "product_id": { "type": "integer" },
          "product": { "$ref": "#/components/schemas/Product" },
          "quantity": { "type": "integer" },
          "unit_price": { "type": "integer" }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "user_id": { "type": "integer" },
          "total": { "type": "integer" },
          "items": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrderItem" }
          },
          "address": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "example": "eyJhbGciOi..." }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "email": { "type": "string", "example": "taro@example.com" },
          "name": { "type": "string", "example": "Taro" }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "purchase successful" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "invalid credentials" }
        }
      }
    }
  },
  "paths": {
    "/api/register": {
      "post": {
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login user and get JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authenticated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "List products",
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Product" }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a product (auth required)",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProductDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Get product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update product (auth required)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductDTO" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete product (auth required)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/api/purchase": {
      "post": {
        "summary": "Create a purchase order (auth required)",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PurchaseDTO" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase successful",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g. stock)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  }
}
